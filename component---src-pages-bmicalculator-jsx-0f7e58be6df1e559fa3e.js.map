{"version":3,"sources":["webpack:///./src/pages/bmicalculator.jsx"],"names":["BMI_RANGES","min","max","range","Number","MAX_SAFE_INTEGER","BmiCalculator","state","height","weight","bmi","bmiRange","handleInputChange","event","target","name","value","setState","onCalculate","denominator","parseFloat","toFixed","calculatedBmiRange","find","console","log","renderResults","this","render","title","pages","offset","type","onChange","onClick","Component"],"mappings":"oPAWMA,EAAa,CACjB,CACEC,IAAK,EACLC,IAAK,KACLC,MAAO,eAET,CACEF,IAAK,KACLC,IAAK,KACLC,MAAO,iBAET,CACEF,IAAK,GACLC,IAAK,KACLC,MAAO,cAET,CACEF,IAAK,GACLC,IAAKE,OAAOC,iBACZF,MAAO,UAIUG,E,oJACnBC,MAAQ,CACNC,OAAQ,EACRC,OAAQ,EACRC,IAAK,KACLC,SAAU,I,EAGZC,kBAAoB,SAACC,GAAW,IAAD,IACLA,EAAMC,OAAtBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MAEd,EAAKC,WAAL,MACGF,GAAOC,EADV,K,EAKFE,YAAc,WAAO,IAAD,EACS,EAAKX,MAAxBC,EADU,EACVA,OAAQC,EADE,EACFA,OAChB,GAAIA,GAAUD,EAAQ,CACpB,IAAMW,EAAW,SAAIC,WAAWZ,GAAU,IAAQ,GAC5CE,GAAOU,WAAWX,GAAUU,GAAaE,QAAQ,GACjDC,EAAqBtB,EAAWuB,MAAK,SAACpB,GAAD,OAAWA,EAAMF,IAAMS,GAAOA,EAAMP,EAAMD,OACrFsB,QAAQC,IAAIf,GACZ,EAAKO,SAAS,CAAEP,MAAKC,SAAUW,EAAmBnB,U,8CAItDuB,cAAA,WAAiB,IAAD,EACYC,KAAKpB,MAAvBG,EADM,EACNA,IAAKC,EADC,EACDA,SACb,OACE,kBAAC,WAAD,KACGD,GAAO,kBAAC,IAAD,oBAAmBA,GAC1BC,GAAY,kBAAC,IAAD,gBAAeA,K,EAKlCiB,OAAA,WAAU,IAAD,EACoBD,KAAKpB,MAAxBC,EADD,EACCA,OAAQC,EADT,EACSA,OAChB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQoB,MAAM,mCACd,kBAAC,WAAD,CAAUC,MAAO,GACf,kBAAC,IAAD,CAAMC,OAAQ,GACZ,kBAAC,IAAD,uBACA,kBAAC,IAAD,iFACA,kBAAC,IAAD,KACE,kBAAC,IAAD,sBACA,kBAAC,IAAD,CAAOC,KAAK,OAAOjB,KAAK,SAASC,MAAOR,EAAQyB,SAAUN,KAAKf,qBAEjE,kBAAC,IAAD,KACE,kBAAC,IAAD,sBACA,kBAAC,IAAD,CAAOoB,KAAK,OAAOjB,KAAK,SAASC,MAAOP,EAAQwB,SAAUN,KAAKf,qBAEjE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQsB,QAASP,KAAKT,aAAtB,uBAEDS,KAAKD,gBACN,kBAAC,IAAD,kGAIF,kBAAC,IAAD,CAAMK,OAAQ,GACZ,kBAAC,IAAD,kCACA,kBAAC,IAAD,4KAIA,kBAAC,IAAD,uHAIA,kBAAC,IAAD,oFACA,kBAAC,IAAD,qO,GA1E+BI","file":"component---src-pages-bmicalculator-jsx-0f7e58be6df1e559fa3e.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport Helmet from 'react-helmet'\nimport { Parallax } from 'react-spring/renderprops-addons.cjs'\n\nimport Layout from '../components/Layout'\n\nimport Hero from '../views/Hero'\nimport { BigTitle, H2Title, Text, Disclaimer, Input, Label, InputContainer, Button } from '../elements'\n\n// TODO: Add validations for input fields.\n\nconst BMI_RANGES = [\n  {\n    min: 0,\n    max: 18.5,\n    range: 'Underweight',\n  },\n  {\n    min: 18.5,\n    max: 24.9,\n    range: 'Normal weight',\n  },\n  {\n    min: 25,\n    max: 29.9,\n    range: 'Overweight',\n  },\n  {\n    min: 30,\n    max: Number.MAX_SAFE_INTEGER,\n    range: 'Obese',\n  },\n]\n\nexport default class BmiCalculator extends Component {\n  state = {\n    height: 0,\n    weight: 0,\n    bmi: null,\n    bmiRange: '',\n  }\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target\n\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  onCalculate = () => {\n    const { height, weight } = this.state\n    if (weight && height) {\n      const denominator = (parseFloat(height) / 100) ** 2\n      const bmi = (parseFloat(weight) / denominator).toFixed(2)\n      const calculatedBmiRange = BMI_RANGES.find((range) => range.min < bmi && bmi < range.max)\n      console.log(bmi)\n      this.setState({ bmi, bmiRange: calculatedBmiRange.range })\n    }\n  }\n\n  renderResults() {\n    const { bmi, bmiRange } = this.state\n    return (\n      <Fragment>\n        {bmi && <Text>Your BMI is {bmi}</Text>}\n        {bmiRange && <Text>You are {bmiRange}</Text>}\n      </Fragment>\n    )\n  }\n\n  render() {\n    const { height, weight } = this.state\n    return (\n      <Fragment>\n        <Layout />\n        <Helmet title=\"OzCalculators | BMI Calculator\" />\n        <Parallax pages={2}>\n          <Hero offset={0}>\n            <BigTitle>BMI Calculator</BigTitle>\n            <Text>Scroll down to view important information regarding this BMI Calculator.</Text>\n            <InputContainer>\n              <Label>Height in cm:</Label>\n              <Input type=\"text\" name=\"height\" value={height} onChange={this.handleInputChange} />\n            </InputContainer>\n            <InputContainer>\n              <Label>Weight in kg:</Label>\n              <Input type=\"text\" name=\"weight\" value={weight} onChange={this.handleInputChange} />\n            </InputContainer>\n            <Text>\n              <Button onClick={this.onCalculate}>Calculate your BMI</Button>\n            </Text>\n            {this.renderResults()}\n            <Disclaimer>\n              Note: This calculator shouldn't be used for measuring BMI of children or pregnant women.\n            </Disclaimer>\n          </Hero>\n          <Hero offset={1}>\n            <H2Title>What is a BMI Calculator?</H2Title>\n            <Text>\n              BMI can indicate if a person is underweight, healthy, overweight or obese. If a person's BMI is outside\n              the healthy range, health risks may increase significantly.\n            </Text>\n            <Text>\n              BMI doesn't measure body fat directly and does not take into account age, sex, ethnicity and body\n              composition.\n            </Text>\n            <Text>This calculator shouldn't for measuring BMI for children or pregnant women.</Text>\n            <Text>\n              Disclaimer: While utmost care has been taken to keep this accurate, it should not be used as a conclusive\n              tool for assessing health risks. Always speak with your doctor about health risks associated with your\n              weight.\n            </Text>\n          </Hero>\n        </Parallax>\n      </Fragment>\n    )\n  }\n}\n"],"sourceRoot":""}